
laba_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000124  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a67  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000956  00000000  00000000  00000c6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000313  00000000  00000000  000015c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000018d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000048d  00000000  00000000  000018fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000090  00000000  00000000  00001d89  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001e19  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
   c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  10:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  14:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  18:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  1c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  20:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  24:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  28:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  2c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  30:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  34:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  38:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  3c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  40:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  44:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  48:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  4c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  50:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  54:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  58:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  5c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  60:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  64:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  68:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  6c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  70:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  74:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  78:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  7c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  80:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  84:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  88:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  8c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  90:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  94:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  98:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  9c:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a4:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  a8:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  ac:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>
  b0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	0e 94 66 00 	call	0xcc	; 0xcc <main>
  c4:	0c 94 90 00 	jmp	0x120	; 0x120 <_exit>

000000c8 <__bad_interrupt>:
  c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000cc <main>:
#define FREQ2 2000
#define FREQ3 3000
#define INTERVAL 250 // интервал в миллисекундах
int main(void)
{
	DDRD = 0xFF;
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
  d0:	84 b9       	out	0x04, r24	; 4
    TCCR0A |= (1 << WGM01) | (1 << WGM00); // настройка Fast PWM режима
  d2:	84 b5       	in	r24, 0x24	; 36
  d4:	83 60       	ori	r24, 0x03	; 3
  d6:	84 bd       	out	0x24, r24	; 36
    TCCR0A |= (1 << COM0A0); // настройка для вывода на пин OC0A (pin 6 на Atmega328P)
  d8:	84 b5       	in	r24, 0x24	; 36
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	84 bd       	out	0x24, r24	; 36
    TCCR0B |= (1 << CS01); // настройка предделителя на 8
  de:	85 b5       	in	r24, 0x25	; 37
  e0:	82 60       	ori	r24, 0x02	; 2
  e2:	85 bd       	out	0x25, r24	; 37

    OCR0A = 127; // устанавливаем значение ШИМ для генерации прямоугольного сигнала с длительностью 50%
  e4:	8f e7       	ldi	r24, 0x7F	; 127
  e6:	87 bd       	out	0x27, r24	; 39

    while (1)
    {
    // Генерация сигнала частоты 1КГц
    TCCR0B &= ~((1 << CS02) | (1 << CS01) | (1 << CS00)); // Остановить таймер
  e8:	85 b5       	in	r24, 0x25	; 37
  ea:	88 7f       	andi	r24, 0xF8	; 248
  ec:	85 bd       	out	0x25, r24	; 37
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ee:	83 e2       	ldi	r24, 0x23	; 35
  f0:	94 ef       	ldi	r25, 0xF4	; 244
  f2:	01 97       	sbiw	r24, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <main+0x26>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <main+0x2c>
  f8:	00 00       	nop
    _delay_ms(INTERVAL);

    // Генерация сигнала частоты 2КГц
    TCCR0B |= (1 << CS01); // настройка предделителя на 8
  fa:	85 b5       	in	r24, 0x25	; 37
  fc:	82 60       	ori	r24, 0x02	; 2
  fe:	85 bd       	out	0x25, r24	; 37
 100:	83 e2       	ldi	r24, 0x23	; 35
 102:	94 ef       	ldi	r25, 0xF4	; 244
 104:	01 97       	sbiw	r24, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <main+0x38>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x3e>
 10a:	00 00       	nop
    _delay_ms(INTERVAL);

    // Генерация сигнала частоты 3КГц
    TCCR0B |= (1 << CS02); // настройка предделителя на 64
 10c:	85 b5       	in	r24, 0x25	; 37
 10e:	84 60       	ori	r24, 0x04	; 4
 110:	85 bd       	out	0x25, r24	; 37
 112:	83 e2       	ldi	r24, 0x23	; 35
 114:	94 ef       	ldi	r25, 0xF4	; 244
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <main+0x4a>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <main+0x50>
 11c:	00 00       	nop
 11e:	e4 cf       	rjmp	.-56     	; 0xe8 <main+0x1c>

00000120 <_exit>:
 120:	f8 94       	cli

00000122 <__stop_program>:
 122:	ff cf       	rjmp	.-2      	; 0x122 <__stop_program>
